"""Add SchedulingAttack model

Revision ID: 911401789948
Revises: 
Create Date: 2025-04-07 14:40:31.773514

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '911401789948'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('scheduling_attack',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('month_start', sa.Date(), nullable=False),
    sa.Column('released_fa_jobs', sa.Integer(), nullable=True),
    sa.Column('released_fa_tech_hours', sa.Float(), nullable=True),
    sa.Column('scheduled_fa_jobs', sa.Integer(), nullable=True),
    sa.Column('scheduled_fa_tech_hours', sa.Float(), nullable=True),
    sa.Column('to_be_scheduled_fa_jobs', sa.Integer(), nullable=True),
    sa.Column('to_be_scheduled_fa_tech_hours', sa.Float(), nullable=True),
    sa.Column('released_sprinkler_jobs', sa.Integer(), nullable=True),
    sa.Column('released_sprinkler_tech_hours', sa.Float(), nullable=True),
    sa.Column('scheduled_sprinkler_jobs', sa.Integer(), nullable=True),
    sa.Column('scheduled_sprinkler_tech_hours', sa.Float(), nullable=True),
    sa.Column('to_be_scheduled_sprinkler_jobs', sa.Integer(), nullable=True),
    sa.Column('to_be_scheduled_sprinkler_tech_hours', sa.Float(), nullable=True),
    sa.Column('jobs_to_be_scheduled', sa.JSON(), nullable=True),
    sa.Column('not_counted_fa_locations', sa.JSON(), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('month_start')
    )
    with op.batch_alter_table('job_summary', schema=None) as batch_op:
        batch_op.alter_column('updated_at',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               existing_nullable=True)

    with op.batch_alter_table('processing_status', schema=None) as batch_op:
        batch_op.alter_column('updated_at',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               existing_nullable=True)

    with op.batch_alter_table('processor_metrics', schema=None) as batch_op:
        batch_op.alter_column('updated_at',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               existing_nullable=True)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('processor_metrics', schema=None) as batch_op:
        batch_op.alter_column('updated_at',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=True)

    with op.batch_alter_table('processing_status', schema=None) as batch_op:
        batch_op.alter_column('updated_at',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=True)

    with op.batch_alter_table('job_summary', schema=None) as batch_op:
        batch_op.alter_column('updated_at',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=True)

    op.drop_table('scheduling_attack')
    # ### end Alembic commands ###
