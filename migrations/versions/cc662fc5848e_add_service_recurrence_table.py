"""add service_recurrence table

Revision ID: cc662fc5848e
Revises: cef20e999406
Create Date: 2025-09-08 15:22:32.330753

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'cc662fc5848e'
down_revision = 'cef20e999406'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('service_recurrence',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('st_recurrence_id', sa.BIGINT(), nullable=False),
    sa.Column('location_id', sa.BIGINT(), nullable=False),
    sa.Column('service_id', sa.BIGINT(), nullable=True),
    sa.Column('service_name', sa.String(length=255), nullable=True),
    sa.Column('frequency', sa.String(length=50), nullable=True),
    sa.Column('interval', sa.SmallInteger(), nullable=True),
    sa.Column('first_start', sa.DateTime(timezone=True), nullable=True),
    sa.Column('first_end', sa.DateTime(timezone=True), nullable=True),
    sa.Column('month', sa.SmallInteger(), nullable=True),
    sa.Column('updated_on_st', sa.DateTime(timezone=True), nullable=True),
    sa.Column('est_on_site_hours', sa.Float(), nullable=True),
    sa.Column('travel_minutes', sa.Integer(), nullable=True),
    sa.Column('travel_minutes_is_roundtrip', sa.Boolean(), nullable=True),
    sa.Column('hours_basis', sa.String(length=20), nullable=True),
    sa.Column('basis_job_id', sa.BIGINT(), nullable=True),
    sa.Column('basis_inspection_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('basis_clock_events_hours', sa.Float(), nullable=True),
    sa.Column('basis_sample_size', sa.SmallInteger(), nullable=True),
    sa.Column('is_current', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['location_id'], ['location.location_id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('service_recurrence', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_service_recurrence_is_current'), ['is_current'], unique=False)
        batch_op.create_index(batch_op.f('ix_service_recurrence_location_id'), ['location_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_service_recurrence_month'), ['month'], unique=False)
        batch_op.create_index(batch_op.f('ix_service_recurrence_st_recurrence_id'), ['st_recurrence_id'], unique=True)
        batch_op.create_index(batch_op.f('ix_service_recurrence_updated_on_st'), ['updated_on_st'], unique=False)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('job_item_technician', schema=None) as batch_op:
        batch_op.drop_constraint('uq_job_item_id', type_='unique')

    with op.batch_alter_table('service_recurrence', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_service_recurrence_updated_on_st'))
        batch_op.drop_index(batch_op.f('ix_service_recurrence_st_recurrence_id'))
        batch_op.drop_index(batch_op.f('ix_service_recurrence_month'))
        batch_op.drop_index(batch_op.f('ix_service_recurrence_location_id'))
        batch_op.drop_index(batch_op.f('ix_service_recurrence_is_current'))

    op.drop_table('service_recurrence')
    # ### end Alembic commands ###
